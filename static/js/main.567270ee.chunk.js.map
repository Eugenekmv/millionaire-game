{"version":3,"sources":["static/img/hand.png","pages/UI/ButtonGame/index.jsx","pages/Finish/index.jsx","context/navContext.js","pages/UI/ButtonAnswer/index.jsx","pages/Game/AnswerList/index.jsx","pages/UI/BurgerButton/index.jsx","pages/Game/Stages/index.jsx","pages/Game/index.jsx","pages/Start/index.jsx","App.js","index.js"],"names":["module","exports","ButtonGame","title","className","Finish","location","useLocation","prizeStep","state","useState","prize","setPrize","useEffect","gameJson","stages","forEach","step","id","amount","src","hand","alt","to","MenuContext","createContext","NavState","children","isMenuOpen","toggleMenu","Provider","value","toggleMenuMode","Button","text","onAnswerClick","answeredQuestion","onClick","AnswerList","answers","map","answer","ButtonAnswer","key","BurgerButton","useContext","Stages","activeQuestion","setActiveStage","stage","Question","setActiveQuestion","setAnsweredQuestion","history","useHistory","quiz","question","answerId","rightAnswerId","timeout","setTimeout","length","push","pathname","prev","clearTimeout","Start","App","path","exact","component","Game","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.567270ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.f8c75481.png\";","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst ButtonGame = ({ title }) => {\r\n  return <button className=\"btn-game\">{title}</button>;\r\n};\r\n\r\nexport default ButtonGame;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport gameJson from '../../static/game.json';\r\n\r\nimport ButtonGame from '../UI/ButtonGame';\r\n\r\nimport './style.css';\r\nimport hand from '../../static/img/hand.png';\r\n\r\nconst Finish = () => {\r\n  const location = useLocation();\r\n  const prizeStep = location.state && location.state.prizeStep;\r\n\r\n  const [prize, setPrize] = useState(0);\r\n\r\n  useEffect(() => {\r\n    gameJson.stages.forEach((step) => {\r\n      if (step.id === prizeStep) {\r\n        setPrize(step.amount);\r\n      }\r\n    });\r\n  }, [prizeStep]);\r\n\r\n  return (\r\n    <div className=\"finish-wrapper\">\r\n      <div className=\"finish-container\">\r\n        <img src={hand} className=\"finish-hand\" alt=\"\" />\r\n        <div className=\"finish-block\">\r\n          <div className=\"block-results\">\r\n            <span className=\"results__title\">Total score:</span>\r\n            <span className=\"results__earned\">{`${prize} earned`}</span>\r\n          </div>\r\n          <Link to=\"/millionaire-game/game\">\r\n            <ButtonGame title=\"Try again\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Finish;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const MenuContext = createContext();\r\n\r\nconst NavState = ({ children }) => {\r\n  const [isMenuOpen, toggleMenu] = useState(false);\r\n\r\n  function toggleMenuMode() {\r\n    toggleMenu(!isMenuOpen);\r\n  }\r\n\r\n  return (\r\n    <MenuContext.Provider value={{ isMenuOpen, toggleMenuMode }}>\r\n      {children}\r\n    </MenuContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NavState;\r\n","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst Button = ({ id, text, onAnswerClick, answeredQuestion }) => {\r\n  const addClass = () => {\r\n    if (answeredQuestion === 'failed') {\r\n      return 'failed';\r\n    }\r\n    if (answeredQuestion === 'success') {\r\n      return 'success';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <button className={`btn-answer ${addClass()}`} onClick={() => onAnswerClick(id)}>\r\n      <span className=\"id\">{id}: </span>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport ButtonAnswer from '../../UI/ButtonAnswer';\r\n\r\nconst AnswerList = ({ answers, onAnswerClick, answeredQuestion }) => {\r\n  return (\r\n    <>\r\n      {answers.map((answer) => (\r\n        <ButtonAnswer\r\n          key={answer.id}\r\n          id={answer.id}\r\n          text={answer.text}\r\n          onAnswerClick={onAnswerClick}\r\n          answeredQuestion={answeredQuestion ? answeredQuestion[answer.id] : null}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnswerList;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { MenuContext } from '../../../context/navContext';\r\n\r\nimport './style.css';\r\n\r\nconst BurgerButton = () => {\r\n  const { isMenuOpen, toggleMenuMode } = useContext(MenuContext);\r\n\r\n  const clickHandler = () => {\r\n    toggleMenuMode();\r\n  };\r\n\r\n  return (\r\n    <div className={`icon nav-icon-5 ${isMenuOpen ? 'open' : ''}`} onClick={clickHandler}>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerButton;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { MenuContext } from '../../../context/navContext';\r\n\r\nimport './style.css';\r\n\r\nconst Stages = ({ stages, activeQuestion }) => {\r\n  const { isMenuOpen } = useContext(MenuContext);\r\n\r\n  const setActiveStage = (stage) => {\r\n    if (activeQuestion === stage.id) {\r\n      return 'current';\r\n    } else if (activeQuestion > stage.id) {\r\n      return 'completed';\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`quiz-stage ${isMenuOpen ? 'opened' : ''}`}>\r\n        {stages.map((stage) => (\r\n          <div className={`stage ${setActiveStage(stage)}`} key={stage.id}>\r\n            {stage.amount}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stages;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport gameJson from '../../static/game.json';\r\n\r\nimport NavState from '../../context/navContext';\r\nimport AnswerList from './AnswerList';\r\nimport BurgerButton from '../UI/BurgerButton';\r\nimport Stages from './Stages';\r\n\r\nimport './style.css';\r\n\r\nconst Question = () => {\r\n  const [activeQuestion, setActiveQuestion] = useState(0);\r\n  const [answeredQuestion, setAnsweredQuestion] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const { quiz } = gameJson;\r\n  const { stages } = gameJson;\r\n  const { answers } = gameJson.quiz[activeQuestion];\r\n  const question = gameJson.quiz[activeQuestion];\r\n\r\n  const onAnswerClick = (answerId) => {\r\n    if (answerId === question.rightAnswerId) {\r\n      setAnsweredQuestion({ [answerId]: 'success' });\r\n\r\n      const isGameFinished = () => {\r\n        return activeQuestion + 1 === quiz.length;\r\n      };\r\n\r\n      const timeout = setTimeout(() => {\r\n        if (isGameFinished()) {\r\n          history.push({\r\n            pathname: '/millionaire-game/finish',\r\n            state: {\r\n              prizeStep: activeQuestion,\r\n            },\r\n          });\r\n          setAnsweredQuestion(null);\r\n          setActiveQuestion(0);\r\n        } else {\r\n          setActiveQuestion((prev) => prev + 1);\r\n          setAnsweredQuestion(null);\r\n        }\r\n\r\n        clearTimeout(timeout);\r\n      }, 1000);\r\n    } else {\r\n      setAnsweredQuestion({ [answerId]: 'failed' });\r\n      const timeout = setTimeout(() => {\r\n        history.push({\r\n          pathname: '/millionaire-game/finish',\r\n          state: {\r\n            prizeStep: activeQuestion - 1,\r\n          },\r\n        });\r\n        clearTimeout(timeout);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NavState>\r\n      <div className=\"quiz-container\">\r\n        <div className=\"quiz-game\">\r\n          <div className=\"game-container\">\r\n            <span className=\"quiz-game__title\">{question.question}</span>\r\n            <div className=\"quiz-game__questions\">\r\n              <AnswerList\r\n                answers={answers}\r\n                onAnswerClick={onAnswerClick}\r\n                answeredQuestion={answeredQuestion}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BurgerButton />\r\n        <Stages stages={stages} activeQuestion={activeQuestion} />\r\n      </div>\r\n    </NavState>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ButtonGame from '../UI/ButtonGame';\r\n\r\nimport hand from '../../static/img/hand.png';\r\nimport './style.css';\r\n\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"wrapper\">\r\n        <img src={hand} className=\"hand\" alt=\"hand\" />\r\n        <div className=\"block\">\r\n          <span className=\"title\">Who wants to be a millionaire?</span>\r\n          <Link to=\"/millionaire-game/game\">\r\n            <ButtonGame title=\"Start\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React from 'react';\n\nimport Finish from './pages/Finish';\nimport Game from './pages/Game';\nimport Start from './pages/Start';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/millionaire-game/start\" exact component={Start} />\n        <Route path=\"/millionaire-game/game\" exact component={Game} />\n        <Route path=\"/millionaire-game/finish\" exact component={Finish} />\n        <Redirect to=\"/millionaire-game/start\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}